// This file is auto-generated by @hey-api/openapi-ts

/**
 * DeleteAttrib
 */
export type DeleteAttrib = {
    /**
     * Action
     */
    action: string;
    /**
     * Node
     */
    node: string;
    /**
     * Name
     */
    name: string;
};

/**
 * DeleteNamespace
 */
export type DeleteNamespace = {
    /**
     * Action
     */
    action: string;
    /**
     * Prefix
     */
    prefix: string;
};

/**
 * DeleteNode
 */
export type DeleteNode = {
    /**
     * Action
     */
    action: string;
    /**
     * Node
     */
    node: string;
};

/**
 * Diff
 */
export type Diff = {
    /**
     * Left Index
     */
    left_index: number;
    /**
     * Right Index
     */
    right_index: number;
    /**
     * Edits
     */
    edits: Array<InsertNode | DeleteNode | RenameNode | MoveNode | UpdateTextIn | UpdateTextAfter | UpdateAttrib | DeleteAttrib | InsertAttrib | RenameAttrib | InsertComment | InsertNamespace | DeleteNamespace>;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * InsertAttrib
 */
export type InsertAttrib = {
    /**
     * Action
     */
    action: string;
    /**
     * Node
     */
    node: string;
    /**
     * Name
     */
    name: string;
    /**
     * Value
     */
    value: string;
};

/**
 * InsertComment
 */
export type InsertComment = {
    /**
     * Action
     */
    action: string;
    /**
     * Target
     */
    target: string;
    /**
     * Position
     */
    position: number;
    /**
     * Text
     */
    text: string;
};

/**
 * InsertNamespace
 */
export type InsertNamespace = {
    /**
     * Action
     */
    action: string;
    /**
     * Prefix
     */
    prefix: string;
    /**
     * Uri
     */
    uri: string;
};

/**
 * InsertNode
 */
export type InsertNode = {
    /**
     * Action
     */
    action: string;
    /**
     * Target
     */
    target: string;
    /**
     * Tag
     */
    tag: string;
    /**
     * Position
     */
    position: number;
};

/**
 * LawDetailProjection
 */
export type LawDetailProjection = {
    id: PydanticObjectId;
    /**
     * Name
     */
    name: string;
    /**
     * Short Title
     */
    short_title?: string | null;
    /**
     * Long Title
     */
    long_title?: string | null;
    /**
     * Versions
     */
    versions: Array<LawVersionListProjection>;
};

/**
 * LawListProjection
 */
export type LawListProjection = {
    id: PydanticObjectId;
    /**
     * Name
     */
    name: string;
    /**
     * Short Title
     */
    short_title?: string | null;
    /**
     * Long Title
     */
    long_title?: string | null;
};

/**
 * LawVersionListProjection
 */
export type LawVersionListProjection = {
    id: PydanticObjectId;
    /**
     * Date
     */
    date: string;
};

/**
 * MoveNode
 */
export type MoveNode = {
    /**
     * Action
     */
    action: string;
    /**
     * Node
     */
    node: string;
    /**
     * Target
     */
    target: string;
    /**
     * Position
     */
    position: number;
};

export type PydanticObjectId = string;

/**
 * RenameAttrib
 */
export type RenameAttrib = {
    /**
     * Action
     */
    action: string;
    /**
     * Node
     */
    node: string;
    /**
     * Oldname
     */
    oldname: string;
    /**
     * Newname
     */
    newname: string;
};

/**
 * RenameNode
 */
export type RenameNode = {
    /**
     * Action
     */
    action: string;
    /**
     * Node
     */
    node: string;
    /**
     * Tag
     */
    tag: string;
};

/**
 * UpdateAttrib
 */
export type UpdateAttrib = {
    /**
     * Action
     */
    action: string;
    /**
     * Node
     */
    node: string;
    /**
     * Name
     */
    name: string;
    /**
     * Value
     */
    value: string;
};

/**
 * UpdateTextAfter
 */
export type UpdateTextAfter = {
    /**
     * Action
     */
    action: string;
    /**
     * Node
     */
    node: string;
    /**
     * Text
     */
    text: string;
};

/**
 * UpdateTextIn
 */
export type UpdateTextIn = {
    /**
     * Action
     */
    action: string;
    /**
     * Node
     */
    node: string;
    /**
     * Text
     */
    text: string;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type GetLawsLawsGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/laws/';
};

export type GetLawsLawsGetErrors = {
    /**
     * Not found
     */
    404: unknown;
};

export type GetLawsLawsGetResponses = {
    /**
     * Response Get Laws Laws  Get
     * List of laws
     */
    200: Array<LawListProjection>;
};

export type GetLawsLawsGetResponse = GetLawsLawsGetResponses[keyof GetLawsLawsGetResponses];

export type GetLawLawsLawIdGetData = {
    body?: never;
    path: {
        law_id: PydanticObjectId;
    };
    query?: never;
    url: '/laws/{law_id}';
};

export type GetLawLawsLawIdGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetLawLawsLawIdGetError = GetLawLawsLawIdGetErrors[keyof GetLawLawsLawIdGetErrors];

export type GetLawLawsLawIdGetResponses = {
    /**
     * Successful Response
     */
    200: LawDetailProjection;
};

export type GetLawLawsLawIdGetResponse = GetLawLawsLawIdGetResponses[keyof GetLawLawsLawIdGetResponses];

export type GetParagraphsVersionsVersionIdParagraphsGetData = {
    body?: never;
    path: {
        version_id: PydanticObjectId;
    };
    query?: {
        /**
         * Page
         */
        page?: number;
        /**
         * Limit
         */
        limit?: number;
    };
    url: '/versions/{version_id}/paragraphs/';
};

export type GetParagraphsVersionsVersionIdParagraphsGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetParagraphsVersionsVersionIdParagraphsGetError = GetParagraphsVersionsVersionIdParagraphsGetErrors[keyof GetParagraphsVersionsVersionIdParagraphsGetErrors];

export type GetParagraphsVersionsVersionIdParagraphsGetResponses = {
    /**
     * List of paragraphs
     */
    200: unknown;
};

export type GetDiffDiffLeftVersionIdRightVersionIdGetData = {
    body?: never;
    path: {
        left_version_id: PydanticObjectId;
        right_version_id: PydanticObjectId;
    };
    query?: never;
    url: '/diff/{left_version_id}/{right_version_id}';
};

export type GetDiffDiffLeftVersionIdRightVersionIdGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetDiffDiffLeftVersionIdRightVersionIdGetError = GetDiffDiffLeftVersionIdRightVersionIdGetErrors[keyof GetDiffDiffLeftVersionIdRightVersionIdGetErrors];

export type GetDiffDiffLeftVersionIdRightVersionIdGetResponses = {
    /**
     * Response Get Diff Diff  Left Version Id   Right Version Id  Get
     * Diff endpoint
     */
    200: Array<Diff>;
};

export type GetDiffDiffLeftVersionIdRightVersionIdGetResponse = GetDiffDiffLeftVersionIdRightVersionIdGetResponses[keyof GetDiffDiffLeftVersionIdRightVersionIdGetResponses];

export type StartWorkImportPostData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/import';
};

export type StartWorkImportPostResponses = {
    /**
     * Successful Response
     */
    202: unknown;
};

export type ClientOptions = {
    baseUrl: 'http://localhost:8000' | (string & {});
};